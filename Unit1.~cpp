//---------------------------------------------------------------------------

#include <iostream>
#include <vcl.h>
#pragma hdrstop
#include <fstream>
#include <string>
#include <stdio.h>
#include <Math.hpp>
#include <cstdio>
#include "Unit1.h"
#include <math.h>
#include<stdlib.h>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;

int product[2][2];
void init(){
int n=3;
int m=3;
randomize();
for(int i=0; i<n; i++)
      for(int j=0; j<m; j++)
      {
      Form1->StringGrid1->Cells[j][i]=String(rand()%10);
      Form1->StringGrid2->Cells[j][i]=String(rand()%10);
      }
/*for(int i=0; i<n; i++)
      for(int j=0; j<m; j++)
      {a[i][j]=0;
       b[i][j]=0;}   */
}
void matrix(){
 int a[2][2];
int b[2][2];
int n=3;
int m=3;
for(int i=0; i<n; i++)
      for(int j=0; j<m; j++)
      {
      a[i][j]=atoi(Form1->StringGrid1->Cells[j][i].c_str());
      b[i][j]=atoi(Form1->StringGrid2->Cells[j][i].c_str());

      }


//Form1->StringGrid3->Visible=true ;
for(int i=0; i<n; i++)
      for(int j=0; j<m; j++)
      {

      Form1->StringGrid1->Cells[j][i]=String(a[i][j]);
      }
}
void MultiplyWithOutAMP() {

    for (int row = 0; row < 3; row++) {
        for (int col = 0; col < 3; col++) {
            for (int inner = 0; inner < 2; inner++) {
                ///]product[row][col] += a[row][inner] * b[inner][col];
            }

        }

    }
}

//-------------------------------------------------------------------- -------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button1Click(TObject *Sender)
{
matrix();




}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject *Sender)
{
init();
}
//---------------------------------------------------------------------------
